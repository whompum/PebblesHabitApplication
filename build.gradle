// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: 'gradle-configurations/dependencies.gradle'
    apply from: 'gradle-configurations/versioning.gradle'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50'
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.1"
    }
}

subprojects {
    afterEvaluate { project ->

        if (project.hasProperty('android') && project.path != ':Base' ) {
            android {
                compileSdkVersion this.ext.compile_sdk_version
                buildToolsVersion this.ext.build_tools_version

                defaultConfig {
                    minSdkVersion this.ext.min_sdk_version
                    targetSdkVersion this.ext.target_sdk_version
                    versionCode this.ext.code
                    versionName "${this.ext.major}.${this.ext.minor}.${this.ext.subminor}"
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }

                buildTypes {

                    debug {
                        versionNameSuffix "-debug"
                        debuggable true
                        buildConfigField "boolean", "enableLogs", "true"
                        crunchPngs false
                        minifyEnabled false
                    }

                    release {
                        debuggable false
                        buildConfigField "boolean", "enableLogs", "false"
                        minifyEnabled true
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }
            }
        }
    }
}

allprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"
    apply from: "$rootProject.rootDir/sca/detekt.gradle"
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
